{"version":3,"file":"bundle.f848b1b44c0ca6984262.js","mappings":"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","sources":["webpack://weatherappx/./src/components/Dropdown.js","webpack://weatherappx/./src/common.js","webpack://weatherappx/./src/components/Backdrop.js","webpack://weatherappx/./src/components/Modal.js","webpack://weatherappx/./src/components/weatherappx/Error.js","webpack://weatherappx/./src/components/weatherappx/Spinner.js","webpack://weatherappx/./src/components/weatherappx/helpers/ArrayRange.js","webpack://weatherappx/./src/components/weatherappx/helpers/Mapping.js","webpack://weatherappx/./src/components/weatherappx/Icons.js","webpack://weatherappx/./src/components/weatherappx/helpers/ConcToAqi.js","webpack://weatherappx/./src/components/weatherappx/CurrentForecast.js","webpack://weatherappx/./src/components/weatherappx/UV.js","webpack://weatherappx/./src/components/weatherappx/GMaps.js","webpack://weatherappx/./src/components/weatherappx/WeatherDetails.js","webpack://weatherappx/./src/components/weatherappx/AQI.js","webpack://weatherappx/./src/components/weatherappx/HourlyForecast.js","webpack://weatherappx/./src/components/weatherappx/DailyForecast.js","webpack://weatherappx/./src/components/weatherappx/WeatherAppX.js","webpack://weatherappx/./src/components/weatherappx/CityList.js","webpack://weatherappx/./src/components/weatherappx/Search.js","webpack://weatherappx/./src/components/weatherappx/Gauge.js","webpack://weatherappx/./src/components/weatherappx/Router.js","webpack://weatherappx/./src/components/weatherappx/Bookmarks.js","webpack://weatherappx/./src/components/weatherappx/Storage.js","webpack://weatherappx/./src/components/weatherappx/Reload.js","webpack://weatherappx/./src/components/ColorModes.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nconst Default = {\n  autoClose: true,\n  keyboard: true,\n};\n\nexport default class Dropdown {\n  constructor(element) {\n    this._element = element;\n    this._config = Dropdown.Default;\n    this._parent = this._element.closest('.dropdown');\n    this._menu = this._parent.querySelector('.dropdown-menu');\n\n    this._addEventListeners();\n  }\n\n  // getters/setters\n  static get Default() {\n    return Default;\n  }\n\n  // public methods\n  toggle() {\n    return this._isShown() ? this.hide() : this.show();\n  }\n\n  show() {\n    if (this._isShown()) {\n      return;\n    }\n\n    this._element.focus();\n    this._element.setAttribute('aria-expanded', true);\n\n    this._menu.style.display = 'block';\n    this._menu.classList.add('show');\n    this._element.classList.add('show');\n  }\n\n  hide() {\n    if (!this._isShown()) {\n      return;\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element,\n    };\n    this._hideDropdown(relatedTarget);\n  }\n\n  // private methods\n  _isShown() {\n    return this._menu.classList.contains('show');\n  }\n\n  _addEventListeners() {\n    this._element.addEventListener('keydown', (event) => {\n      if (event.key !== 'Escape') {\n        return;\n      }\n\n      if (this._config.keyboard) {\n        this.hide();\n      }\n    });\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  _hideDropdown(_relatedTarget) {\n    this._element.blur();\n    this._element.setAttribute('aria-expanded', false);\n\n    this._menu.classList.remove('show');\n    this._menu.classList.add('hiding');\n\n    this._menu.addEventListener('animationend', () => {\n      this._menu.classList.remove('hiding');\n      this._menu.style.display = 'none';\n    }, { once: true });\n  }\n\n  // static methods\n  static clearMenus(event) {\n    if (event.button === 2 || (event.type === 'keyup' && event.key !== 'tab')) {\n      return;\n    }\n\n    const openToggles = document.querySelectorAll('[data-jsx-toggle=\"dropdown\"].show');\n\n    openToggles.forEach((toggle) => {\n      const context = new Dropdown(toggle);\n\n      if (!context || context._config.autoClose === false) return;\n\n      const composedPath = event.composedPath();\n      const isMenuTarget = composedPath.includes(context._menu);\n\n      if (composedPath.includes(context._element) || !isMenuTarget\n          || (context._config.autoClose === 'inside' && !isMenuTarget)\n          || (context._config.autoClose === 'outside' && !isMenuTarget)) {\n        return;\n      }\n\n      if (context._menu.contains(event.target) && ((event.type === 'keyup' && event.key === 'tab') || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n        return;\n      }\n\n      const relatedTarget = { relatedTarget: context.element };\n      if (event.type === 'click') {\n        relatedTarget.clickEvent = event;\n      }\n      context._hideDropdown(relatedTarget);\n    });\n  }\n}\n\ndocument.addEventListener('click', Dropdown.clearMenus);\n\nconst clickHandler = (event) => {\n  const THIS = event.target.closest('[data-jsx-toggle=\"dropdown\"]');\n\n  event.preventDefault();\n  const instance = new Dropdown(THIS);\n  instance.toggle();\n};\n\ndocument.querySelectorAll('[data-jsx-toggle=\"dropdown\"]')\n  .forEach((selector) => {\n    selector.addEventListener('click', clickHandler);\n  });\n","export const enableDismissTrigger = (Component, method = 'hide') => {\n  const EVENT_CLICK = 'click';\n  const { NAME } = Component;\n\n  const SELECTOR_DATA_DISMISS = `[data-jsx-dismiss=\"${NAME}\"]`;\n  document.querySelectorAll(SELECTOR_DATA_DISMISS)\n    .forEach((selector) => {\n      selector.addEventListener(EVENT_CLICK, (event) => {\n        const THIS = event.target.closest(SELECTOR_DATA_DISMISS);\n\n        event.preventDefault();\n\n        const instance = new Component(THIS.closest(`.${NAME}`));\n        instance[method]();\n      });\n    });\n};\n\n// ------------------------------------- //\n//  weatherappx related\n// ------------------------------------- //\n// CONSTANTS\nexport const BASE_API_URL = 'https://api.open-meteo.com/v1/forecast?';\nexport const BASE_GEOCODING_API_URL = 'https://geocoding-api.open-meteo.com/v1/';\nexport const BASE_AQI_API_URL = 'https://air-quality-api.open-meteo.com/v1/air-quality?';\n\nexport const INCHES_OF_MERCURY = 0.02952998057228486;\nexport const ICONS_MAP = new Map();\nexport const ICON_DESCRIPTION_MAP = new Map();\nexport const UV_INDEX_MAP = new Map();\nexport const AQI_LEVELS_MAP = new Map();\n\n// STATE\nexport const state = {\n  searchCityItems: [],\n  bookmarkCityItems: [],\n  activeCityItem: {},\n  bookmarkedCityItem: {},\n  currentForecast: {},\n  hourlyForecast: {},\n  dailyForecast: {},\n  aqi: {},\n};\n\n// EVENT HANDLERS\nexport const EVENT_KEYDOWN = 'keydown';\nexport const EVENT_SUBMIT = 'submit';\nexport const EVENT_CLICK = 'click';\nexport const EVENT_LOAD = 'DOMContentLoaded';\nexport const EVENT_HASCHANGE = 'hashchange';\n\n// SELECTORS\nexport const searchEl = document.querySelector('#search');\nexport const searchFormEl = document.querySelector('.search');\nexport const searchInputEl = document.querySelector('.search__input');\nexport const searchResultsHelpEl = document.querySelector('.search-results__help');\nexport const searchBtnClear = document.querySelector('.search-btn__clear');\nexport const errorTextEl = document.querySelector('.error__text');\nexport const spinnerSearchEl = document.querySelector('.spinner--search');\nexport const cityListSearchEl = document.querySelector('.city-list--search');\nexport const cityListBookmarkEl = document.querySelector('.city-list--bookmark');\nexport const bookmarksEl = document.querySelector('.bookmarks');\nexport const bookmarksTitleEl = document.querySelector('.second-heading--bookmarks');\nexport const weatherDetailsContentEl = document.querySelector('.weather-details__content');\nexport const spinnerWeatherDetails = document.querySelector('.spinner--weather-details');\n\n// HELPER / UTILITY FUNCTIONS\nexport const getData = async (url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  if (!response.ok) { // 4xx, 5xx status code\n    throw new Error(data.description);\n  }\n\n  return data;\n};\n\nexport const reflow = (element) => element.offsetHeight;\n\nexport const elementFromHtml = (html) => {\n  const template = document.createElement('template');\n\n  template.innerHTML = html.trim();\n  return template.content.firstElementChild;\n};\n\nexport const dateTimeFormatter = (\n  options,\n  date,\n) => new Intl.DateTimeFormat(undefined, options).format(date);\n\nexport const timeToPercent = (current, total) => {\n  const [cHour, cMinutes] = current.split(':').map((i) => Number(i));\n  const [tHour, tMinutes] = total.split(':').map((i) => Number(i));\n\n  const currentTime = ((cHour * 60) + cMinutes) / 1000;\n  const totalTime = ((tHour * 60) + tMinutes) / 1000;\n\n  return Number(currentTime / totalTime);\n};\n\nexport const timeDuration = (start, end) => {\n  const [startH, startM] = start.split(':').map((i) => Number(i));\n  const [endH, endM] = end.split(':').map((i) => Number(i));\n\n  if (startM < endM) {\n    return `${endH - startH}hr ${endM - startM}mins`;\n  }\n  if (startM > endM) {\n    return `${(endH - 1) - startH}hr ${(endM + 60) - startM}mins`;\n  }\n  return 0;\n};\n\nexport const mgPerCubicMeterToPPB = (conc, molecularWeight) => (24.45 * conc) / molecularWeight;\n\nexport const toCapitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n","/* eslint-disable no-underscore-dangle */\nimport {\n  reflow,\n  elementFromHtml,\n} from '../common';\n\nconst Default = {\n  className: 'modal-backdrop',\n  isAnimated: false,\n  isVisible: true,\n};\n\nexport default class Backdrop {\n  constructor(config) {\n    this._config = Object.assign(Backdrop.Default, config);\n  }\n\n  // getters/setters\n  static get Default() {\n    return Default;\n  }\n\n  // public methods\n  show(callback) {\n    if (!this._config.isVisible || this._isAppended()) {\n      return;\n    }\n\n    this._element = this._appendElement();\n\n    if (this._config.isAnimated) {\n      reflow(this._element);\n    }\n\n    this._element.classList.add('show');\n    callback();\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible || !this._isAppended()) {\n      return;\n    }\n\n    this._element = this._getElement();\n\n    this._element.classList.remove('show');\n\n    this._element.addEventListener('transitionend', () => {\n      this.dispose();\n      callback();\n    }, { once: true });\n  }\n\n  dispose() {\n    if (!this._isAppended()) {\n      return;\n    }\n\n    this._element.remove();\n  }\n\n  // private methods\n  _isAppended() {\n    return document.body.contains(this._getElement());\n  }\n\n  _getElement() {\n    return document.querySelector(`.${this._config.className}`);\n  }\n\n  _appendElement() {\n    const element = elementFromHtml(`<div class=\"${this._config.className}\"></div>`);\n\n    if (this._config.isAnimated) {\n      element.classList.add('fade');\n    }\n\n    return document.body.insertAdjacentElement('beforeend', element);\n  }\n\n  // static methods\n}\n","/* eslint-disable no-underscore-dangle */\nimport {\n  reflow,\n  enableDismissTrigger,\n} from '../common';\n\nimport Backdrop from './Backdrop';\n\nconst NAME = 'modal';\n\nexport default class Modal {\n  constructor(element) {\n    this._element = element;\n    this._backdrop = this._initBackdrop();\n\n    this._addEventListeners();\n  }\n\n  // getters/setters\n  static get NAME() {\n    return NAME;\n  }\n\n  // public methods\n  toggle() {\n    return !this._isShown() ? this.show() : this.hide();\n  }\n\n  show() {\n    if (this._isShown()) {\n      return;\n    }\n\n    document.body.classList.add('modal-open');\n    document.body.classList.remove('modal-closed');\n    this._backdrop.show(() => this._showElement());\n  }\n\n  hide() {\n    if (!this._isShown()) {\n      return;\n    }\n    this._element.classList.remove('show');\n    this._element.blur();\n\n    this._hideModal();\n  }\n\n  dispose() {\n    this._backdrop.dispose();\n\n    super.dispose();\n  }\n\n  // private methods\n  _isShown() {\n    return this._element.classList.contains('show');\n  }\n\n  _showElement() {\n    this._element.style.display = 'block';\n    this._element.removeAttribute('aria-hidden');\n\n    reflow(this._element);\n\n    this._element.classList.add('show');\n    this._element.focus();\n  }\n\n  _hideModal() {\n    this._element.addEventListener('transitionend', () => {\n      this._element.style.display = 'none';\n      this._element.setAttribute('aria-hidden', true);\n\n      this._backdrop.hide(() => {\n        document.body.classList.remove('modal-open');\n        document.body.classList.add('modal-closed');\n      });\n    }, { once: true });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _initBackdrop() {\n    return new Backdrop({\n      isVisible: true,\n      isAnimated: true,\n    });\n  }\n\n  _addEventListeners() {\n    this._element.addEventListener('keydown', (event) => {\n      if (event.key !== 'Escape') {\n        return;\n      }\n\n      this.hide();\n    });\n  }\n}\n\nconst clickHandler = (event) => {\n  const THIS = event.target.closest('[data-jsx-toggle=\"modal\"]');\n  const target = document.querySelector(THIS.dataset.jsxTarget);\n\n  event.preventDefault();\n\n  const instance = new Modal(target);\n  instance.toggle();\n};\n\ndocument.querySelectorAll('[data-jsx-toggle=\"modal\"]')\n  .forEach((selector) => {\n    selector.addEventListener('click', clickHandler);\n  });\n\nenableDismissTrigger(Modal);\n","import {\n  errorTextEl,\n} from '../../common';\n\nconst renderError = (message = 'Something went wrong') => {\n  errorTextEl.textContent = message;\n};\n\nexport default renderError;\n","import {\n  spinnerSearchEl,\n  spinnerWeatherDetails,\n} from '../../common';\n\nconst renderSpinner = (whichSpinner) => {\n  const spinnerEl = (whichSpinner === 'search') ? spinnerSearchEl : spinnerWeatherDetails;\n  spinnerEl.classList.toggle('visually-hidden');\n};\n\nexport default renderSpinner;\n","const arrayRange = (\n  start,\n  stop,\n  step,\n) => Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\n\nexport default arrayRange;\n","const addToMap = (MAP, keys, value) => {\n  keys.forEach((key) => {\n    MAP.set(key, value);\n  });\n};\n\nexport default addToMap;\n","import { ICONS_MAP, ICON_DESCRIPTION_MAP } from '../../common';\nimport addToMap from './helpers/Mapping';\n\nconst renderIcons = (isDay) => {\n  if (isDay) {\n    addToMap(ICONS_MAP, [0, 1], 'sunny');\n    addToMap(ICONS_MAP, [2], 'partlySunny');\n    addToMap(ICONS_MAP, [51, 53, 55, 56, 57], 'drizzle');\n\n    // Icons Description (Day)\n    addToMap(ICON_DESCRIPTION_MAP, [0, 1], 'Clear / Mostly clear');\n    addToMap(ICON_DESCRIPTION_MAP, [2], 'Partly cloudy');\n    addToMap(ICON_DESCRIPTION_MAP, [51, 53, 55, 56, 57], 'Drizzle / Freezing drizzle');\n  } else {\n    addToMap(ICONS_MAP, [0, 1], 'clearNight');\n    addToMap(ICONS_MAP, [2], 'partlyCloudyNight');\n    addToMap(ICONS_MAP, [51, 53, 55, 56, 57], 'nightDrizzle');\n\n    // Icons Description (Night)\n    addToMap(ICON_DESCRIPTION_MAP, [0, 1], 'Clear / Mostly Clear (night)');\n    addToMap(ICON_DESCRIPTION_MAP, [2], 'Partly cloudy (night)');\n    addToMap(ICON_DESCRIPTION_MAP, [51, 53, 55, 56, 57], 'Drizzle (night)');\n  }\n\n  addToMap(ICONS_MAP, [3], 'cloudy');\n  addToMap(ICONS_MAP, [45, 48], 'fog');\n  addToMap(ICONS_MAP, [61, 63, 80, 81], 'rain');\n  addToMap(ICONS_MAP, [65, 82], 'heavyRain');\n  addToMap(ICONS_MAP, [66, 67], 'Sleet');\n  addToMap(ICONS_MAP, [71, 73, 77, 85], 'snow');\n  addToMap(ICONS_MAP, [75, 86], 'scatteredSnow');\n  addToMap(ICONS_MAP, [95, 96, 99], 'thunderBolt');\n\n  addToMap(ICON_DESCRIPTION_MAP, [3], 'Cloudy');\n  addToMap(ICON_DESCRIPTION_MAP, [45, 48], 'Fog');\n  addToMap(ICON_DESCRIPTION_MAP, [61, 63, 80, 81], 'Rain');\n  addToMap(ICON_DESCRIPTION_MAP, [65, 82], 'Heavy rain');\n  addToMap(ICON_DESCRIPTION_MAP, [66, 67], 'Freezing rain / Sleet / Wintry mix');\n  addToMap(ICON_DESCRIPTION_MAP, [71, 73, 77, 85], 'Snow');\n  addToMap(ICON_DESCRIPTION_MAP, [75, 86], 'Heavy snow / Blizzard');\n  addToMap(ICON_DESCRIPTION_MAP, [95, 96, 99], 'Thunderstorm');\n\n  // Extras\n  addToMap(ICONS_MAP, [150], 'sunrise');\n  addToMap(ICONS_MAP, [151], 'sunset');\n};\n\nexport default renderIcons;\n","const pollutants = {\n  /*-\n   * AQI and Concentration Breakpoints for O3 (8hr avg).\n   */\n  O3: {\n    concBPLow:\n      [\n        0.000,\n        0.055,\n        0.071,\n        0.086,\n        0.106,\n      ],\n    concBPHigh:\n      [\n        0.054,\n        0.070,\n        0.085,\n        0.105,\n        0.200,\n      ],\n    aqiBPLow:\n      [\n        0,\n        51,\n        101,\n        151,\n        201,\n      ],\n    aqiBPHigh:\n      [\n        50,\n        100,\n        150,\n        200,\n        300,\n      ],\n  },\n\n  /*-\n   * AQI and Concentration Breakpoints for pm2.5 (24hr avg).\n   */\n  PM2_5: {\n    concBPLow:\n      [\n        0.0,\n        12.1,\n        35.5,\n        55.5,\n        150.5,\n        250.5,\n      ],\n    concBPHigh:\n      [\n        12.0,\n        35.4,\n        55.4,\n        150.4,\n        250.4,\n        500.4,\n      ],\n    aqiBPLow:\n      [\n        0,\n        51,\n        101,\n        151,\n        201,\n        301,\n        401,\n      ],\n    aqiBPHigh:\n      [\n        50,\n        100,\n        150,\n        200,\n        300,\n        400,\n        500,\n      ],\n  },\n\n  /*-\n   * AQI and Concentration Breakpoints for pm2.10 (24hr avg).\n   */\n  PM2_10: {\n    concBPLow:\n      [\n        0,\n        55,\n        155,\n        255,\n        355,\n        425,\n      ],\n    concBPHigh:\n      [\n        54,\n        154,\n        254,\n        354,\n        424,\n        604,\n      ],\n    aqiBPLow:\n      [\n        0,\n        51,\n        101,\n        151,\n        201,\n        301,\n        401,\n      ],\n    aqiBPHigh:\n      [\n        50,\n        100,\n        150,\n        200,\n        300,\n        400,\n        500,\n      ],\n  },\n\n  /*-\n   * AQI and Concentration Breakpoints for CO (8hr avg).\n   */\n  CO: {\n    concBPLow:\n      [\n        0.0,\n        4.5,\n        9.5,\n        12.5,\n        15.5,\n        30.5,\n      ],\n    concBPHigh:\n      [\n        4.4,\n        9.4,\n        12.4,\n        15.4,\n        40.4,\n        50.4,\n      ],\n    aqiBPLow:\n      [\n        0,\n        51,\n        101,\n        151,\n        201,\n        301,\n        401,\n      ],\n    aqiBPHigh:\n      [\n        50,\n        100,\n        150,\n        200,\n        300,\n        400,\n        500,\n      ],\n  },\n};\n\nconst {\n  O3, PM2_5, PM2_10, CO,\n} = pollutants;\nconst pollutantsMap = new Map();\n\npollutantsMap.set('o3', O3);\npollutantsMap.set('pm2.5', PM2_5);\npollutantsMap.set('pm2.10', PM2_10);\npollutantsMap.set('co', CO);\n\nconst concToAQI = (pollutant, conc) => {\n  const {\n    concBPLow, concBPHigh, aqiBPLow, aqiBPHigh,\n  } = pollutantsMap.get(pollutant);\n\n  const aqi = concBPLow.map((concL, index) => {\n    const concH = concBPHigh[index];\n    const aqiL = aqiBPLow[index];\n    const aqiH = aqiBPHigh[index];\n\n    if (conc >= concL && conc <= concH) {\n      return ((aqiH - aqiL) / (concH - concL)) * (conc - concL) + aqiL;\n    }\n\n    return -1;\n  // eslint-disable-next-line no-shadow\n  }).filter((aqi) => aqi !== -1);\n\n  return Math.round(Number(aqi));\n};\n\nexport default concToAQI;\n","import {\n  AQI_LEVELS_MAP,\n  ICONS_MAP,\n  ICON_DESCRIPTION_MAP,\n  INCHES_OF_MERCURY,\n  UV_INDEX_MAP,\n  dateTimeFormatter,\n  mgPerCubicMeterToPPB,\n  state,\n  timeDuration,\n  timeToPercent,\n  weatherDetailsContentEl,\n} from '../../common';\nimport renderAQI from './AQI';\nimport renderIcons from './Icons';\nimport renderUV from './UV';\nimport concToAQI from './helpers/ConcToAqi';\n\nexport const parseCurrentForecast = () => {\n  renderAQI();\n\n  // current\n  const {\n    weather_code: weatherCode,\n    temperature_2m: temperature,\n    apparent_temperature: feelsLike,\n    wind_speed_10m: windSpeed,\n    precipitation,\n    relative_humidity_2m: humidity,\n    pressure_msl: pressure,\n    is_day: isDay,\n  } = state.currentForecast;\n\n  // hourly\n  const {\n    visibility: [visibility],\n    dew_point_2m: [dewPoint],\n  } = state.hourlyForecast;\n\n  // daily\n  const {\n    temperature_2m_max: [maxTemp],\n    apparent_temperature_min: [minFeelsLikeTemp],\n    sunrise: [sunrise],\n    sunset: [sunset],\n  } = state.dailyForecast;\n\n  // aqi\n  const {\n    pm2_5: pm25,\n    carbon_monoxide: co,\n    nitrogen_dioxide: no,\n    sulphur_dioxide: so,\n    ozone: o3,\n    uv_index: uvIndex,\n  } = state.aqi;\n\n  // extras\n  const {\n    id,\n    name: city,\n    admin1: st,\n    country_code: countryCode,\n    timezone,\n  } = state.activeCityItem;\n\n  return {\n    time: new Date().getTime(),\n    weatherCode,\n    temperature: Math.round(temperature),\n    feelsLike: Math.round(feelsLike),\n    windSpeed,\n    precipitation: Math.round(precipitation),\n    humidity,\n    pressure: (pressure * INCHES_OF_MERCURY).toFixed(2),\n    isDay,\n\n    visibility: (visibility / 5280).toFixed(1),\n    dewPoint,\n\n    maxTemp: Math.round(maxTemp),\n    minFeelsLikeTemp: Math.round(minFeelsLikeTemp),\n    sunrise: sunrise * 1000,\n    sunset: sunset * 1000,\n\n    id,\n    city,\n    st,\n    countryCode,\n    timezone,\n\n    aqi: {\n      pm25: concToAQI('pm2.5', pm25),\n      co,\n      no,\n      so,\n      o3: concToAQI('o3', parseFloat((mgPerCubicMeterToPPB(o3, 48) / 1000).toFixed(3))),\n    },\n    uvIndex: Math.round(uvIndex),\n  };\n};\n\nexport const renderCurrentForecast = (current) => {\n  renderIcons(current.isDay);\n  renderUV();\n\n  const currentForecast = `\n    <section class=\"current-forecast\">\n      <div class=\"current-forecast__left\">\n        <div class=\"condition\">\n          <div class=\"condition__header\">\n            <h2 class=\"second-heading\">CURRENT WEATHER</h2>\n\n            <div class=\"condition__header-extras\">\n              <i class=\"bi bi-bookmark-fill condition__header-icon ${state.bookmarkCityItems.some((bookmarkCityItem) => bookmarkCityItem.id === current.id) ? 'bookmarks-btn__icon--bookmarked ' : ''}\"></i>\n              <hr class=\"vr border-0\" />\n              <button type=\"button\" class=\"btn condition__header-btn\" data-jsx-btn-action=\"reload\">\n                <i class=\"bi bi-arrow-clockwise\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"condition-temp\">\n            <div class=\"condition-temp__top\">\n              <img src=\"https://raw.githubusercontent.com/JcSilverX/icons-jsx/main/weather/${ICONS_MAP.get(current.weatherCode)}.png\" alt=\"\" class=\"condition-temp__img\">\n                <span class=\"condition-temp__val\">${current.temperature}&deg;F</span>\n            </div>\n\n            <h3 class=\"third-heading\">${ICON_DESCRIPTION_MAP.get(current.weatherCode)}</h3>\n\n            <div class=\"condition-temp__other\">\n              <p class=\"condition-temp__text\">Feels like ${current.feelsLike}&deg;</p>\n              <hr class=\"vr\" />\n              <p class=\"condition-temp__text\">Updated at ${dateTimeFormatter({ hour: 'numeric', minute: 'numeric', timezone: current.timezone }, current.time)}</p>\n            </div>\n          </div>\n          \n          <hr class=\"my-3\" />\n          \n          <div class=\"condition__extras\">\n            <p class=\"condition__text\">\n              <i class=\"bi bi-calendar\"></i>\n              ${dateTimeFormatter({ weekday: 'long', month: 'long', day: 'numeric' }, current.time)}\n            </p>\n            <p class=\"condition__text\">\n              <i class=\"bi bi-pin-map-fill\"></i>\n              ${current.city}, ${current.st}, ${current.countryCode}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"current-forecast__middle\">\n        <div class=\"details\">\n          <div class=\"details__left\">\n            <h2 class=\"second-heading\">TODAY'S DETAILS</h2>\n\n            <div class=\"aqi\">\n              <p class=\"aqi__text\">AIR QUALITY</p>\n              <p class=\"aqi__text ms-auto\">\n                <span class=\"aqi__dot aqi__dot--${AQI_LEVELS_MAP.get(current.aqi.o3).replace(/ /g, '-').toLowerCase()}\">&#8226;</span>\n                ${current.aqi.o3}\n                <span class=\"text-secondary\">${AQI_LEVELS_MAP.get(current.aqi.o3)}</span>\n              </p>\n            </div>\n            \n            <div class=\"details-list\">\n              <div class=\"details-list__item\">\n                <i class=\"bi bi-thermometer-half fs-16 p-2 rounded details-list__item-icon\"></i>\n\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">HIGH/LOW</p>\n                  <p class=\"info__text\">${current.maxTemp}&deg; | ${current.minFeelsLikeTemp}&deg;</p>\n                </div>\n              </div>\n              <div class=\"details-list__item\">\n                <i class=\"bi bi-umbrella fs-16 p-2 rounded details-list__item-icon\"></i>\n\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">PRECIPITATION</p>\n                  <p class=\"info__text\">${current.precipitation} in</p>\n                </div>  \n              </div>\n              <div class=\"details-list__item\">\n                <i class=\"bi bi-sunglasses fs-16 p-2 rounded details-list__item-icon\"></i>\n\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">MAX UV INDEX</p>\n                  <p class=\"info__text\">${current.uvIndex} ${UV_INDEX_MAP.get(current.uvIndex)}</p>\n                </div>\n              </div>\n              <div class=\"details-list__item\">\n                <i class=\"bi bi-eye fs-16 p-2 rounded details-list__item-icon\"></i>\n\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">VISIBILITY</p>\n                  <p class=\"info__text\">${current.visibility} mi</p>\n                </div>\n              </div>\n              <div class=\"details-list__item\">\n                <i class=\"bi bi-wind fs-16 p-2 rounded details-list__item-icon\"></i>\n\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">WIND</p>\n                  <p class=\"info__text\">${current.windSpeed} mph</p>\n                </div>\n              </div>\n              <div class=\"details-list__item\">\n                <i class=\"fs-12 p-2 rounded details-list__item-icon\">DP</i>\n\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">DEW POINT</p>\n                  <p class=\"info__text\">${current.dewPoint}&deg;</p>\n                </div>\n              </div>\n              <div class=\"details-list__item\">\n                <i class=\"bi bi-speedometer fs-16 p-2 rounded details-list__item-icon\"></i>\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">PRESSURE</p>\n                  <p class=\"info__text\">${current.pressure} in</p>\n                </div>\n              </div>\n              <div class=\"details-list__item\">\n                <i class=\"bi bi-moisture fs-16 p-2 rounded details-list__item-icon\"></i>\n                <div class=\"\">\n                  <p class=\"info__text text-secondary\">HUMIDITY</p>\n                  <p class=\"info__text\">${current.humidity}%</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"details__right mx-auto\">\n            <h2 class=\"second-heading text-center\">DAYLIGHT HOURS</h2>\n              \n            <wx-gauge class=\"gauge mx-auto\" data-jsx-percent=\"${timeToPercent(dateTimeFormatter({ timeStyle: 'short', hour12: false }, current.time), dateTimeFormatter({ timeStyle: 'short', hour12: false }, current.sunset))}\"></wx-gauge>\n\n            <div class=\"daylight-hrs\">\n              <div class=\"daylight-hrs__left\">\n                <img src=\"https://github.com/JcSilverX/icons-jsx/blob/main/weather/sunrise.png?raw=true\" alt=\"Sunrise\" class=\"daylight-hrs__img\">\n                <p class=\"daylight-hrs__text\">Sunrise</p>\n                <p class=\"daylight-hrs__text\">${dateTimeFormatter({ timeStyle: 'short', timeZone: current.timezone }, current.sunrise)}</p>\n              </div>\n              <div class=\"daylight-hrs__middle\">\n                <p class=\"daylight-hrs__text\">${timeDuration(dateTimeFormatter({ timeStyle: 'short', timeZone: current.timezone, hour12: false }, current.sunrise), dateTimeFormatter({ timeStyle: 'short', timeZone: current.timezone, hour12: false }, current.sunset))}</p>\n              </div>\n              <div class=\"daylight-hrs__right\">\n                <img src=\"https://github.com/JcSilverX/icons-jsx/blob/main/weather/sunset.png?raw=true\" alt=\"Sunset\" class=\"daylight-hrs__img\">\n                <p class=\"daylight-hrs__text\">Sunset</p>\n                <p class=\"daylight-hrs__text\">${dateTimeFormatter({ timeStyle: 'short', timeZone: current.timezone }, current.sunset)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"current-forecast__right\">\n        <div id=\"map\"></div>\n      </div>\n    </section>\n  `;\n\n  weatherDetailsContentEl.innerHTML = currentForecast;\n};\n","import {\n  UV_INDEX_MAP,\n} from '../../common';\nimport addToMap from './helpers/Mapping';\n\n/*-\n * UV INDEX\n * A score of 1 or 2 is low, 3 to 5 is moderate,\n * 6 or 7 is high, 8 to 10 is very high, and 11 and above\n * is extreme.\n */\nconst renderUV = () => {\n  addToMap(UV_INDEX_MAP, [0, 1, 2], 'Low');\n  addToMap(UV_INDEX_MAP, [3, 4, 5], 'Moderate');\n  addToMap(UV_INDEX_MAP, [6, 7], 'High');\n  addToMap(UV_INDEX_MAP, [8, 9, 10], 'Very high');\n  addToMap(UV_INDEX_MAP, [11], 'Extreme');\n};\n\nexport default renderUV;\n","import {\n  state,\n} from '../../common';\n\n/* eslint-disable no-undef */\nconst initMap = async () => {\n  const { Map } = await google.maps.importLibrary('maps');\n  const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');\n\n  const map = new Map(document.getElementById('map'), {\n    center: { lat: state.activeCityItem.latitude, lng: state.activeCityItem.longitude },\n    zoom: 8,\n    mapId: '',\n  });\n  // eslint-disable-next-line no-unused-vars\n  const marker = new AdvancedMarkerElement({\n    map,\n    position: { lat: state.activeCityItem.latitude, lng: state.activeCityItem.longitude },\n  });\n};\n\nexport default initMap;\n","import {\n  parseCurrentForecast,\n  renderCurrentForecast,\n} from './CurrentForecast';\n\nimport initMap from './GMaps';\n\nimport {\n  parseHourlyForecast,\n  renderHourlyForecast,\n} from './HourlyForecast';\nimport {\n  parseDailyForecast,\n  renderDailyForecast,\n} from './DailyForecast';\n\nconst renderWeatherDetails = () => {\n  // parse current weather\n  const currentForecast = parseCurrentForecast();\n\n  // render current forecast\n  renderCurrentForecast(currentForecast);\n\n  // map\n  initMap();\n\n  // parse hourly weather\n  const hourlyForecast = parseHourlyForecast();\n\n  // render hourly forecast\n  renderHourlyForecast(hourlyForecast);\n\n  // parse daily forecats\n  const dailyForecast = parseDailyForecast();\n\n  // render daily forecast\n  renderDailyForecast(dailyForecast);\n};\n\nexport default renderWeatherDetails;\n","import { AQI_LEVELS_MAP } from '../../common';\nimport arrayRange from './helpers/ArrayRange';\nimport addToMap from './helpers/Mapping';\n\nconst renderAQI = () => {\n  addToMap(AQI_LEVELS_MAP, arrayRange(0, 50, 1), 'Good');\n  addToMap(AQI_LEVELS_MAP, arrayRange(51, 100, 1), 'Moderate');\n  addToMap(AQI_LEVELS_MAP, arrayRange(101, 200, 1), 'Unhealthy');\n  addToMap(AQI_LEVELS_MAP, arrayRange(201, 300, 1), 'Very unhealthy');\n  addToMap(AQI_LEVELS_MAP, arrayRange(301, 500, 1), 'Hazardous');\n};\n\nexport default renderAQI;\n","import {\n  ICONS_MAP,\n  dateTimeFormatter,\n  elementFromHtml,\n  state,\n  toCapitalize,\n  weatherDetailsContentEl,\n} from '../../common';\n\nexport const parseHourlyForecast = () => {\n  // horly\n  const {\n    time: hour,\n    temperature_2m: temperature,\n    weather_code: weatherCode,\n    is_day: isDay,\n  } = state.hourlyForecast;\n\n  // daily\n  const {\n    sunrise,\n    sunset,\n  } = state.dailyForecast;\n\n  // merge arrays\n  const timeList = hour.concat(sunrise, sunset).sort();\n  const daylight = sunrise.concat(sunset).sort();\n\n  const result = timeList.filter((hr) => daylight.includes(hr));\n\n  const indexes = timeList.map((_, index) => timeList.indexOf(result[index]))\n    .filter((index) => index !== -1);\n\n  return timeList.map((time, index) => {\n    if ((index % 2) === 0) {\n      weatherCode.splice(indexes[index], 1, 150);\n      temperature.splice(indexes[index], 1, 150);\n    } else {\n      weatherCode.splice(indexes[index], 1, 151);\n      temperature.splice(indexes[index], 1, 151);\n    }\n\n    return {\n      timestamp: time * 1000,\n      weatherCode: weatherCode[index],\n      temperature: Math.round(temperature[index]),\n      isDay: isDay[index],\n    };\n  }).filter(({ timestamp }) => timestamp >= state.currentForecast.time * 1000);\n};\n\nexport const renderHourlyForecast = (hourly) => {\n  const hourlyForecastEl = elementFromHtml('<section class=\"hourly-forecast\"></section>');\n  const secondHeading = elementFromHtml('<h2 class=\"second-heading\">HOURLY FORECAST</h2>');\n  const hourlyForecastContentEl = elementFromHtml('<div class=\"hourly-forecast__content\"></div>');\n\n  weatherDetailsContentEl.insertAdjacentElement('beforeend', hourlyForecastEl);\n  hourlyForecastEl.insertAdjacentElement('beforeend', secondHeading);\n  hourlyForecastEl.insertAdjacentElement('beforeend', hourlyForecastContentEl);\n\n  hourly.slice(0, 25).forEach((hour) => {\n    const hr = `\n      <div class=\"card\">\n        <div class=\"card__header\">\n          ${dateTimeFormatter({ timeStyle: 'short', timeZone: hour.timezone }, hour.timestamp)}\n        </div>\n        <div class=\"card__body\">\n          <img src=\"https://raw.githubusercontent.com/JcSilverX/icons-jsx/main/weather/${ICONS_MAP.get(hour.weatherCode)}.png\" alt=\"\" width=\"20\" height=\"20\" />\n        </div>\n        <div class=\"card__footer\">\n          ${(hour.temperature === 150 || hour.temperature === 151) ? toCapitalize(ICONS_MAP.get(hour.weatherCode)) : `${hour.temperature}&deg;`}\n        </div>\n      </div>\n    `;\n\n    hourlyForecastContentEl.insertAdjacentHTML('beforeend', hr);\n  });\n};\n","import {\n  ICONS_MAP,\n  dateTimeFormatter,\n  elementFromHtml,\n  state,\n  weatherDetailsContentEl,\n} from '../../common';\nimport renderIcons from './Icons';\n\nexport const parseDailyForecast = () => {\n  // daily\n  const {\n    time,\n    weather_code: weatherCode,\n    temperature_2m_max: maxTemp,\n    apparent_temperature_min: minFeelsLikeTemp,\n    precipitation_sum: precipitation,\n  } = state.dailyForecast;\n\n  // eslint-disable-next-line no-shadow\n  return time.map((time, index) => ({\n    timestamp: time * 1000,\n    weatherCode: weatherCode[index],\n    maxTemp: Math.round(maxTemp[index]),\n    minFeelsLikeTemp: Math.round(minFeelsLikeTemp[index]),\n    precipitation: Math.round(precipitation[index] * 100) / 100,\n    isDay: (index === 0) ? state.currentForecast.isDay : 1,\n  }));\n};\n\nexport const renderDailyForecast = (daily) => {\n  const dailyForecastEl = elementFromHtml('<section class=\"daily-forecast\"></section>');\n  const secondHeading = elementFromHtml('<h2 class=\"second-heading\">HOURLY FORECAST</h2>');\n  const dailyForecastListEl = elementFromHtml('<ul class=\"daily-forecast__list grid\" style=\"--jsx-rows: 10; --jsx-columns: 5;\"></ul>');\n\n  weatherDetailsContentEl.insertAdjacentElement('beforeend', dailyForecastEl);\n  dailyForecastEl.insertAdjacentElement('beforeend', secondHeading);\n  dailyForecastEl.insertAdjacentElement('beforeend', dailyForecastListEl);\n\n  daily.forEach((day) => {\n    renderIcons(day.isDay);\n\n    const newDay = `\n      <li class=\"daily-forecast__item\">${dateTimeFormatter({ weekday: 'long' }, day.timestamp)}</li>\n      <li class=\"daily-forecast__item\">\n        <img src=\"https://raw.githubusercontent.com/JcSilverX/icons-jsx/main/weather/${ICONS_MAP.get(day.weatherCode)}.png\" alt=\"\" width=\"20\" height=\"20\" />\n      </li>\n      <li class=\"daily-forecast__item\">${(day.precipitation > 0) ? `${day.precipitation}in` : ''}</li>\n      <li class=\"daily-forecast__item\">${day.maxTemp}&deg;</li>\n      <li class=\"daily-forecast__item daily-forecast__item--min-temp\">${day.minFeelsLikeTemp}&deg;</li>\n    `;\n\n    dailyForecastListEl.insertAdjacentHTML('beforeend', newDay);\n  });\n};\n","import {\n  BASE_API_URL,\n  BASE_AQI_API_URL,\n  BASE_GEOCODING_API_URL,\n  EVENT_LOAD, getData, state, weatherDetailsContentEl,\n} from '../../common';\nimport renderError from './Error';\nimport renderSpinner from './Spinner';\nimport renderWeatherDetails from './WeatherDetails';\n\nexport default class WeatherX {\n  // eslint-disable-next-line no-useless-constructor, no-empty-function\n  constructor() {\n  }\n\n  // getters/setters\n\n  // public methods\n\n  // private methods\n\n  // static methods\n  static async initApp() {\n    const id = 5128581;\n\n    weatherDetailsContentEl.innerHTML = '';\n\n    // add spinner\n    renderSpinner('weather-details');\n\n    try {\n      const location = await getData(`${BASE_GEOCODING_API_URL}get?id=${id}&language=en&format=json`);\n\n      // add id to url\n      window.history.pushState(null, '', `/#${id}`);\n\n      const { latitude: lat, longitude: long, timezone } = location;\n\n      const { current, hourly, daily } = await getData(`${BASE_API_URL}latitude=${lat}&longitude=${long}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weather_code,cloud_cover,pressure_msl,wind_speed_10m&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation_probability,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,visibility,uv_index,uv_index_clear_sky,is_day&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,daylight_duration,sunshine_duration,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max&temperature_unit=fahrenheit&wind_speed_unit=mph&precipitation_unit=inch&timeformat=unixtime&timezone=${timezone}&forecast_days=10`);\n      const { current: aqi } = await getData(`${BASE_AQI_API_URL}latitude=${lat}&longitude=${long}&current=european_aqi,us_aqi,pm10,pm2_5,carbon_monoxide,nitrogen_dioxide,sulphur_dioxide,ozone,uv_index,uv_index_clear_sky&timeformat=unixtime&timezone=${timezone}&forecast_days=7`);\n\n      // render spinner\n      renderSpinner('weather-details');\n\n      // update state\n      state.activeCityItem = location;\n      state.currentForecast = current;\n      state.hourlyForecast = hourly;\n      state.dailyForecast = daily;\n      state.aqi = aqi;\n\n      // render weather details\n      renderWeatherDetails();\n    } catch (error) {\n      renderError(error.message);\n    }\n  }\n}\n\nwindow.addEventListener(EVENT_LOAD, WeatherX.initApp);\n","import {\n  cityListBookmarkEl,\n  cityListSearchEl,\n  elementFromHtml,\n  state,\n} from '../../common';\n\nconst renderCityList = (whichCityList = 'search') => {\n  // determine correct selector for city list (search results list or bookmarks)\n  const cityListEl = whichCityList === 'search' ? cityListSearchEl : cityListBookmarkEl;\n\n  cityListEl.innerHTML = '';\n\n  // determine the city items that should be rendered\n  let cityItems;\n  if (whichCityList === 'search') {\n    cityItems = state.searchCityItems;\n  } else if (whichCityList === 'bookmarks') {\n    cityItems = state.bookmarkCityItems;\n  }\n\n  cityItems.forEach((cityItem) => {\n    const newCityItemHTML = elementFromHtml(`\n      <li id=${cityItem.id} class=\"city-item ${state.activeCityItem.id === cityItem.id ? 'city-item--active' : ''}\">\n        <div class=\"city-item__top\">\n          <img src=\"https://hatscripts.github.io/circle-flags/flags/${cityItem.country_code.toLowerCase()}.svg\" alt=\"${cityItem.country}\" title=\"${cityItem.country}\" class=\"city-item__img\">\n          <h3 class=\"third-heading\">${cityItem.name}</h3>\n\n          <button type=\"button\" class=\"btn bookmarks-btn\" data-jsx-btn-action=\"bookmark\" aria-label=\"Bookmark\" title=\"Bookmark\">\n            <i class=\"bi bi-star-fill bookmarks-btn__icon ${state.bookmarkCityItems.some((bookmarkCityItem) => bookmarkCityItem.id === cityItem.id) ? 'bookmarks-btn__icon--bookmarked ' : ''}\"></i>\n          </button>\n        </div>\n        <div class=\"city-item__bottom\">\n          <p class=\"city-item__city\">${(cityItem.admin1) ? cityItem.admin1 : ''}</p>\n          <p class=\"city-item__cords\" data-jsx-cords=\"${cityItem.latitude} ${cityItem.longitude}\">(${(cityItem.latitude).toFixed(2)}&deg; ${(cityItem.longitude).toFixed(2)}&deg;)</p>\n        </div>\n      </li>\n    `);\n\n    cityListEl.insertAdjacentElement('beforeend', newCityItemHTML);\n  });\n};\n\nexport default renderCityList;\n","/* eslint-disable no-underscore-dangle */\nimport Modal from '../Modal';\n\nimport {\n  BASE_API_URL,\n  BASE_AQI_API_URL,\n  BASE_GEOCODING_API_URL,\n  EVENT_CLICK,\n  EVENT_KEYDOWN,\n  EVENT_SUBMIT,\n  cityListBookmarkEl,\n  cityListSearchEl,\n  getData,\n  searchBtnClear,\n  searchEl,\n  searchFormEl,\n  searchInputEl,\n  searchResultsHelpEl,\n  state,\n  weatherDetailsContentEl,\n} from '../../common';\n\nimport renderError from './Error';\nimport renderSpinner from './Spinner';\nimport renderCityList from './CityList';\nimport renderWeatherDetails from './WeatherDetails';\n\nexport default class Search extends Modal {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(element) {\n    super(element);\n  }\n\n  // getters/setters\n\n  // public methods\n\n  // private methods\n\n  // static methods\n  static keydownHandler(event) {\n    const instance = new Search(searchEl);\n\n    if (event.ctrlKey && event.key === 'k') {\n      event.preventDefault();\n      instance.toggle();\n    }\n  }\n\n  static async submitHandler(event) {\n    event.preventDefault();\n\n    const searchText = searchInputEl.value;\n\n    const forbiddenPattern = /[^A-Za-z0-9\\s]+/g;\n    const patternMatch = forbiddenPattern.test(searchText);\n\n    searchResultsHelpEl.classList.add('visually-hidden');\n\n    if (patternMatch || searchText.length === 0 || searchText.length === 1) {\n      cityListSearchEl.innerHTML = '';\n      renderError('No locations found');\n      return;\n    }\n\n    searchInputEl.blur();\n\n    renderError('');\n\n    cityListSearchEl.innerHTML = '';\n\n    renderSpinner('search');\n\n    try {\n      const data = await getData(`${BASE_GEOCODING_API_URL}search?name=${searchText}&count=10&language=en&format=json`);\n\n      const { results: cityItems } = data;\n\n      if (cityItems === undefined) {\n        cityListSearchEl.innerHTML = '';\n        renderSpinner('search');\n        renderError('No locations found');\n        return;\n      }\n\n      renderSpinner('search');\n\n      // update state\n      state.searchCityItems = cityItems;\n\n      cityListBookmarkEl.innerHTML = '';\n      renderCityList('search');\n    } catch (error) {\n      renderError(error.message);\n    }\n  }\n\n  static async clickHandler(event) {\n    event.preventDefault();\n\n    if (event.target.className.includes('bookmarks')) {\n      return;\n    }\n\n    // get clicked city item element\n    const cityItemEl = event.target.closest('.city-item');\n\n    // remove the active class from the previously active city items\n    document.querySelectorAll('.city-item.city-item--active')\n      .forEach((cityItemWithActiveClass) => cityItemWithActiveClass.classList.remove('city-item--active'));\n\n    // add active class\n    cityItemEl.classList.add('city-item--active');\n\n    // empty the weather details content\n    weatherDetailsContentEl.innerHTML = '';\n\n    // render spinner\n    renderSpinner('weather-details');\n\n    // get the id\n    const { id } = cityItemEl;\n\n    // update state\n    const allCityItems = [...state.searchCityItems, ...state.bookmarkCityItems];\n    state.activeCityItem = allCityItems.find((cityItem) => cityItem.id === +id);\n\n    // add id to url\n    window.history.pushState(null, '', `/#${id}`);\n\n    // hide modal\n    new Search(searchEl).hide();\n\n    try {\n      const { latitude: lat, longitude: long, timezone } = await getData(`${BASE_GEOCODING_API_URL}get?id=${id}&language=en&format=json`);\n      const { current, hourly, daily } = await getData(`${BASE_API_URL}latitude=${lat}&longitude=${long}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weather_code,cloud_cover,pressure_msl,wind_speed_10m&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation_probability,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,visibility,uv_index,uv_index_clear_sky,is_day&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,daylight_duration,sunshine_duration,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max&temperature_unit=fahrenheit&wind_speed_unit=mph&precipitation_unit=inch&timeformat=unixtime&timezone=${timezone}&forecast_days=10`);\n      const { current: aqi } = await getData(`${BASE_AQI_API_URL}latitude=${lat}&longitude=${long}&current=european_aqi,us_aqi,pm10,pm2_5,carbon_monoxide,nitrogen_dioxide,sulphur_dioxide,ozone,uv_index,uv_index_clear_sky&timeformat=unixtime&timezone=${timezone}&forecast_days=7`);\n\n      // render spinner\n      renderSpinner('weather-details');\n\n      // update state\n      state.currentForecast = current;\n      state.hourlyForecast = hourly;\n      state.dailyForecast = daily;\n      state.aqi = aqi;\n\n      // render weather details\n      renderWeatherDetails();\n    } catch (error) {\n      renderError(error.message);\n    }\n  }\n\n  static clearInput(event) {\n    event.preventDefault();\n\n    searchInputEl.value = '';\n    renderError('');\n  }\n}\n\ndocument.addEventListener(EVENT_KEYDOWN, Search.keydownHandler);\nsearchFormEl.addEventListener(EVENT_SUBMIT, Search.submitHandler);\ncityListSearchEl.addEventListener(EVENT_CLICK, Search.clickHandler);\ncityListBookmarkEl.addEventListener(EVENT_CLICK, Search.clickHandler);\nsearchBtnClear.addEventListener(EVENT_CLICK, Search.clearInput);\n","import {\n  elementFromHtml,\n} from '../../common';\n\nexport default class Gauge extends HTMLElement {\n  static css = `\n    :host {\n      width: 100%;\n      max-width: 10rem;\n    }\n\n    .gauge__body {\n      position: relative;\n      width: 100%;\n      height: 0;\n      padding-bottom: 50%;\n      background: #b4c0be;\n      border-top-left-radius: 100% 200%;\n      border-top-right-radius: 100% 200%;\n      overflow: hidden;\n    }\n\n    .gauge__fill {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: inherit;\n      height: 100%;\n      background: #fad631;\n      transform-origin: center top;\n      transform: rotate(.25turn);\n      transition: transform .2s ease-in-out;\n    }\n\n    .gauge__cover {\n      position: absolute;\n      width: 95%;\n      height: 190%;\n      border-radius: 50%;\n      // background:  var(--jsx-gauge-cover-bg, #dfdfdf);\n      background: var(--jsx-body-bg);\n      top: 5%;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  `;\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n\n    const style = document.createElement('style');\n    const body = elementFromHtml(`\n        <div class=\"gauge__body\">\n            <div class=\"gauge__fill\"></div>\n            <div class=\"gauge__cover\"></div>\n        </div>\n    `);\n\n    style.innerHTML = Gauge.css;\n    this.shadowRoot.append(style, body);\n  }\n\n  // getters/setters\n  get percent() {\n    const value = this.getAttribute('data-jsx-percent');\n    if (value < 0) {\n      return;\n    }\n\n    if (value > 1) {\n      // eslint-disable-next-line consistent-return\n      return 1;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return value;\n  }\n\n  set percent(value) {\n    this.setAttribute('data-jsx-percent', value);\n  }\n\n  static get observedAttributes() {\n    return ['data-jsx-percent'];\n  }\n\n  // public methods\n  attributeChangedCallback(name) {\n    if (name === 'data-jsx-percent') {\n      this.shadowRoot.querySelector('.gauge__fill').style.transform = `rotate(${this.percent / 2}turn)`;\n    }\n  }\n\n  // private methods\n\n  // static methods\n}\n\ncustomElements.define('wx-gauge', Gauge);\n","import {\n  BASE_API_URL,\n  BASE_AQI_API_URL,\n  BASE_GEOCODING_API_URL,\n  EVENT_HASCHANGE,\n  EVENT_LOAD,\n  getData,\n  state,\n  weatherDetailsContentEl,\n} from '../../common';\nimport renderError from './Error';\nimport renderSpinner from './Spinner';\nimport renderWeatherDetails from './WeatherDetails';\n\nconst loadHashChangeHandler = async () => {\n  const id = window.location.hash.substring(1);\n\n  if (id) {\n    // remove previous weather details content\n    weatherDetailsContentEl.innerHTML = '';\n\n    // add spinner\n    renderSpinner('weather-details');\n\n    try {\n      const location = await getData(`${BASE_GEOCODING_API_URL}get?id=${id}&language=en&format=json`);\n\n      const { latitude: lat, longitude: long, timezone } = location;\n\n      const { current, hourly, daily } = await getData(`${BASE_API_URL}latitude=${lat}&longitude=${long}&current=temperature_2m,relative_humidity_2m,apparent_temperature,is_day,precipitation,rain,showers,snowfall,weather_code,cloud_cover,pressure_msl,wind_speed_10m&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation_probability,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,visibility,uv_index,uv_index_clear_sky,is_day&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,daylight_duration,sunshine_duration,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max&temperature_unit=fahrenheit&wind_speed_unit=mph&precipitation_unit=inch&timeformat=unixtime&timezone=${timezone}&forecast_days=10`);\n      const { current: aqi } = await getData(`${BASE_AQI_API_URL}latitude=${lat}&longitude=${long}&current=european_aqi,us_aqi,pm10,pm2_5,carbon_monoxide,nitrogen_dioxide,sulphur_dioxide,ozone,uv_index,uv_index_clear_sky&timeformat=unixtime&timezone=${timezone}&forecast_days=7`);\n\n      // render spinner\n      renderSpinner('weather-details');\n\n      // update state\n      state.activeCityItem = location;\n      state.currentForecast = current;\n      state.hourlyForecast = hourly;\n      state.dailyForecast = daily;\n      state.aqi = aqi;\n\n      // render weather details\n      renderWeatherDetails();\n    } catch (error) {\n      renderError(error.message);\n    }\n  }\n};\n\nwindow.addEventListener(EVENT_LOAD, loadHashChangeHandler);\nwindow.addEventListener(EVENT_HASCHANGE, loadHashChangeHandler);\n","import {\n  EVENT_CLICK,\n  EVENT_LOAD,\n  cityListBookmarkEl,\n  cityListSearchEl,\n  searchResultsHelpEl,\n  state,\n} from '../../common';\nimport renderCityList from './CityList';\nimport Search from './Search';\n\nexport default class Bookmarks extends Search {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(element) {\n    super(element);\n  }\n\n  // getters/setters\n\n  // public methods\n\n  // private methods\n\n  // static methods\n  static clickHandler(event) {\n    const THIS = event.target;\n\n    if (!THIS.className.includes('bookmarks')) return;\n\n    const cityItemEl = THIS.closest('.city-item');\n\n    cityItemEl.classList.add('city-item--bookmarked');\n\n    // update state\n    const allCityItems = [...state.searchCityItems, ...state.bookmarkCityItems];\n    state.bookmarkedCityItem = allCityItems\n      .find((cityItem) => cityItem.id === +cityItemEl.id);\n\n    if (state.bookmarkCityItems\n      .some((bookmarkCityItem) => bookmarkCityItem.id === state.bookmarkedCityItem.id)) {\n      state.bookmarkCityItems = state.bookmarkCityItems\n        .filter((bookmarkCityItem) => (bookmarkCityItem).id !== state.bookmarkedCityItem.id);\n    } else {\n      state.bookmarkCityItems.push(state.bookmarkedCityItem);\n    }\n\n    // persist data with localStorage\n    localStorage.setItem('bookmarkCityItems', JSON.stringify(state.bookmarkCityItems));\n\n    // update bookmark icon\n    THIS.classList.toggle('bookmarks-btn__icon--bookmarked');\n\n    // render city list\n    renderCityList('search');\n  }\n\n  static documentLoadHandler() {\n    if (state.bookmarkCityItems.length === 0) return;\n\n    // remove start screen text\n    searchResultsHelpEl.classList.add('visually-hidden');\n\n    // render bookmarked items\n    renderCityList('bookmarks');\n  }\n}\n\ncityListSearchEl.addEventListener(EVENT_CLICK, Bookmarks.clickHandler);\ncityListBookmarkEl.addEventListener(EVENT_CLICK, Bookmarks.clickHandler);\ndocument.addEventListener(EVENT_LOAD, Bookmarks.documentLoadHandler);\n","import {\n  state,\n} from '../../common';\n\nconst storedJobItems = localStorage.getItem('bookmarkCityItems');\nif (storedJobItems) {\n  state.bookmarkCityItems = JSON.parse(storedJobItems);\n}\n","import {\n  EVENT_CLICK,\n  weatherDetailsContentEl,\n} from '../../common';\n\nconst clickHandler = (event) => {\n  const THIS = event.target.closest('[data-jsx-btn-action=\"reload\"]');\n\n  event.preventDefault();\n\n  if (!THIS) return;\n\n  window.location.reload();\n};\n\nweatherDetailsContentEl.addEventListener(EVENT_CLICK, clickHandler);\n\nexport default clickHandler;\n","const getStoredTheme = () => localStorage.getItem('theme');\nconst setStoredTheme = (theme) => localStorage.setItem('theme', theme);\n\nconst getPreferredTheme = () => {\n  const storedTheme = getStoredTheme();\n  if (storedTheme) {\n    return storedTheme;\n  }\n\n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n};\n\nconst setTheme = (theme) => {\n  if (theme === 'auto') {\n    document.documentElement.setAttribute('data-jsx-theme', (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'));\n  } else {\n    document.documentElement.setAttribute('data-jsx-theme', theme);\n  }\n};\n\nsetTheme(getPreferredTheme());\n\nconst showActiveTheme = (theme, focus = false) => {\n  const themeSwitcher = document.querySelector('#jsx-theme');\n\n  if (!themeSwitcher) {\n    return;\n  }\n\n  const activeThemeIcon = document.querySelector('.theme__icon--active use');\n  const btnToActive = document.querySelector(`[data-jsx-theme-value=\"${theme}\"]`);\n  const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href');\n\n  document.querySelectorAll('[data-jsx-theme-value]')\n    .forEach((element) => {\n      element.classList.remove('active');\n      element.setAttribute('aria-pressed', 'false');\n    });\n\n  btnToActive.classList.add('active');\n  btnToActive.setAttribute('aria-pressed', 'true');\n  activeThemeIcon.setAttribute('href', svgOfActiveBtn);\n\n  if (focus) {\n    themeSwitcher.focus();\n  }\n};\n\nwindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n  const storedTheme = getStoredTheme();\n  if (storedTheme !== 'light' && storedTheme !== 'dark') {\n    setTheme(getPreferredTheme());\n  }\n});\n\nconst clickHandler = (event) => {\n  const toggle = event.target.closest('[data-jsx-theme-value]');\n  const theme = toggle.getAttribute('data-jsx-theme-value');\n\n  setStoredTheme(theme);\n  setTheme(theme);\n  showActiveTheme(theme, true);\n};\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  showActiveTheme(getPreferredTheme());\n\n  document.querySelectorAll('[data-jsx-theme-value]')\n    .forEach((toggle) => {\n      toggle.addEventListener('click', clickHandler);\n    });\n});\n"],"names":["Default","autoClose","keyboard","Dropdown","constructor","element","this","_element","_config","_parent","closest","_menu","querySelector","_addEventListeners","toggle","_isShown","hide","show","focus","setAttribute","style","display","classList","add","relatedTarget","_hideDropdown","contains","addEventListener","event","key","_relatedTarget","blur","remove","once","clearMenus","button","type","document","querySelectorAll","forEach","context","composedPath","isMenuTarget","includes","target","test","tagName","clickEvent","clickHandler","THIS","preventDefault","selector","BASE_API_URL","BASE_GEOCODING_API_URL","BASE_AQI_API_URL","ICONS_MAP","Map","ICON_DESCRIPTION_MAP","UV_INDEX_MAP","AQI_LEVELS_MAP","state","searchCityItems","bookmarkCityItems","activeCityItem","bookmarkedCityItem","currentForecast","hourlyForecast","dailyForecast","aqi","EVENT_CLICK","EVENT_LOAD","searchEl","searchFormEl","searchInputEl","searchResultsHelpEl","searchBtnClear","errorTextEl","spinnerSearchEl","cityListSearchEl","cityListBookmarkEl","weatherDetailsContentEl","spinnerWeatherDetails","getData","async","response","fetch","url","data","json","ok","Error","description","reflow","offsetHeight","elementFromHtml","html","template","createElement","innerHTML","trim","content","firstElementChild","dateTimeFormatter","options","date","Intl","DateTimeFormat","undefined","format","className","isAnimated","isVisible","Backdrop","config","Object","assign","callback","_isAppended","_appendElement","_getElement","dispose","body","insertAdjacentElement","Modal","_backdrop","_initBackdrop","NAME","_showElement","_hideModal","super","removeAttribute","dataset","jsxTarget","Component","method","arguments","length","SELECTOR_DATA_DISMISS","enableDismissTrigger","message","textContent","whichSpinner","arrayRange","start","stop","step","Array","from","value","index","addToMap","MAP","keys","set","isDay","O3","PM2_5","PM2_10","CO","concBPLow","concBPHigh","aqiBPLow","aqiBPHigh","pollutantsMap","concToAQI","pollutant","conc","get","map","concL","concH","aqiL","aqiH","filter","Math","round","Number","renderCurrentForecast","current","renderIcons","some","bookmarkCityItem","id","weatherCode","temperature","feelsLike","hour","minute","timezone","time","weekday","month","day","city","st","countryCode","o3","replace","toLowerCase","maxTemp","minFeelsLikeTemp","precipitation","uvIndex","visibility","windSpeed","dewPoint","pressure","humidity","timeToPercent","total","cHour","cMinutes","split","i","tHour","tMinutes","timeStyle","hour12","sunset","timeZone","sunrise","timeDuration","end","startH","startM","endH","endM","renderWeatherDetails","parseCurrentForecast","weather_code","temperature_2m","apparent_temperature","wind_speed_10m","relative_humidity_2m","pressure_msl","is_day","dew_point_2m","temperature_2m_max","apparent_temperature_min","pm2_5","pm25","carbon_monoxide","co","nitrogen_dioxide","no","sulphur_dioxide","so","ozone","uv_index","name","admin1","country_code","Date","getTime","toFixed","parseFloat","mgPerCubicMeterToPPB","google","maps","importLibrary","AdvancedMarkerElement","getElementById","center","lat","latitude","lng","longitude","zoom","mapId","position","initMap","hourly","hourlyForecastEl","secondHeading","hourlyForecastContentEl","slice","hr","timestamp","str","charAt","toUpperCase","insertAdjacentHTML","renderHourlyForecast","parseHourlyForecast","timeList","concat","sort","daylight","result","indexes","_","indexOf","splice","_ref","daily","dailyForecastEl","dailyForecastListEl","newDay","renderDailyForecast","parseDailyForecast","precipitation_sum","window","initApp","renderSpinner","location","history","pushState","long","error","renderError","whichCityList","cityListEl","cityItems","cityItem","newCityItemHTML","country","Search","keydownHandler","instance","ctrlKey","submitHandler","searchText","patternMatch","results","renderCityList","cityItemEl","cityItemWithActiveClass","allCityItems","find","clearInput","Gauge","HTMLElement","static","attachShadow","mode","css","shadowRoot","append","percent","getAttribute","observedAttributes","attributeChangedCallback","transform","customElements","define","loadHashChangeHandler","hash","substring","Bookmarks","push","localStorage","setItem","JSON","stringify","documentLoadHandler","storedJobItems","getItem","parse","reload","getStoredTheme","getPreferredTheme","matchMedia","matches","setTheme","theme","documentElement","showActiveTheme","themeSwitcher","activeThemeIcon","btnToActive","svgOfActiveBtn","storedTheme","setStoredTheme"],"sourceRoot":""}